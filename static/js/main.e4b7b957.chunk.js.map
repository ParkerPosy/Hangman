{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helper.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","key","reduce","prev","curr","Word","selectedWord","correctLetters","id","split","Math","floor","random","toString","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","props","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","role","style","display","onClick","type","Notification","words","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","push","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4b7b957.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Hangman</h1>\r\n      <p>Guess the hidden word - Enter a letter</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" className=\"figure-part\" />}\r\n      {errors > 1 && (\r\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" className=\"figure-part\" />\r\n      )}\r\n      {errors > 2 && (\r\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" className=\"figure-part\" />\r\n      )}\r\n      {errors > 3 && (\r\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" className=\"figure-part\" />\r\n      )}\r\n      {errors > 4 && (\r\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" className=\"figure-part\" />\r\n      )}\r\n      {errors > 5 && (\r\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" className=\"figure-part\" />\r\n      )}\r\n    </svg>\r\n  )\r\n}\r\n\r\nFigure.propTypes = {\r\n  wrongLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n        <p>Wrong letters:</p>\r\n        {wrongLetters\r\n          .map((letter) => <span key={letter}>{letter}</span>)\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, ', ', curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nWrongLetters.propTypes = {\r\n  wrongLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  return (\r\n    <>\r\n      <div className=\"word\" id=\"word\">\r\n        <div className=\"letters\">\r\n          {selectedWord.split('').map((letter) => (\r\n            // eslint-ignore-next-line\r\n            <span\r\n              className=\"letter\"\r\n              key={Math.floor(Math.random() * 16 ** 128).toString(16)}\r\n            >\r\n              {correctLetters.includes(letter) ? letter : ''}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"word-length\">\r\n          <p>{`The word is ${selectedWord.length} letters`}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nWord.propTypes = {\r\n  selectedWord: PropTypes.string.isRequired,\r\n  correctLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n  setter(true)\r\n  setTimeout(() => {\r\n    setter(false)\r\n  }, 2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win'\r\n\r\n  word.split('').forEach((letter) => {\r\n    if (!correct.includes(letter)) {\r\n      status = ''\r\n    }\r\n  })\r\n\r\n  if (wrong.length === 6) {\r\n    status = 'lose'\r\n  }\r\n\r\n  return status\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { checkWin } from '../helpers/helper'\r\n\r\nconst Popup = (props) => {\r\n  const {\r\n    correctLetters,\r\n    wrongLetters,\r\n    selectedWord,\r\n    setPlayable,\r\n    playAgain,\r\n  } = props\r\n  let finalMessage = ''\r\n  let finalMessageRevealWord = ''\r\n  let playable = true\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n    finalMessage = 'Congratulations! You win! :)'\r\n    playable = false\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\r\n    finalMessage = 'Unfortunately you lost. :('\r\n    finalMessageRevealWord = `...the word was: ${selectedWord}`\r\n    playable = false\r\n  }\r\n\r\n  useEffect(() => setPlayable(playable))\r\n\r\n  return (\r\n    <div\r\n      className=\"popup-container\"\r\n      id=\"popup-container\"\r\n      role=\"dialog\"\r\n      style={!playable ? { display: 'flex' } : { display: 'none' }}\r\n    >\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain} type=\"button\">\r\n          Play Again!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPopup.propTypes = {\r\n  correctLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  wrongLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedWord: PropTypes.string.isRequired,\r\n  setPlayable: PropTypes.bool.isRequired,\r\n  playAgain: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nNotification.propTypes = {\r\n  showNotification: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Figure from './components/Figure'\nimport WrongLetters from './components/WrongLetters'\nimport Word from './components/Word'\nimport Popup from './components/Popup'\nimport Notification from './components/Notification'\nimport { showNotification as show } from './helpers/helper'\n\nimport './App.css'\n\nconst words = ['ball', 'penguin', 'lynx', 'Parker', 'lemming', 'hangman']\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)]\n\nfunction App() {\n  const [playable, setPlayable] = useState(true)\n  const [correctLetters, setCorrectLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [showNotification, setShowNotification] = useState(false)\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase()\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            correctLetters.push(letter)\n            setCorrectLetters((correct) => [...correct, letter])\n          } else {\n            show(setShowNotification)\n          }\n        } else if (!wrongLetters.includes(letter)) {\n          setWrongLetters((wrong) => [...wrong, letter])\n        } else {\n          show(setShowNotification)\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n\n    return () => window.removeEventListener('keydown', handleKeydown)\n  }, [correctLetters, wrongLetters, playable])\n\n  function playAgain() {\n    setPlayable(true)\n\n    setCorrectLetters([])\n    setWrongLetters([])\n\n    const random = Math.floor(Math.random() * words.length)\n    selectedWord = words[random]\n  }\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <button onClick={playAgain} type=\"button\">\n        Reset!\n      </button>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}